<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:BeEmote.Client.WPF">

    <!-- Containers -->
    <Style TargetType="{x:Type Border}" x:Key="WhiteSubControl">
        <Setter Property="BorderBrush" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="Background" Value="{StaticResource HalfTransparentBrush}" />
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Margin" Value="2"/>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="PaddedWhiteSubControl" BasedOn="{StaticResource WhiteSubControl}">
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Background" Value="{StaticResource HalfTransparentBrush}"/>
    </Style>

    <Style TargetType="{x:Type DockPanel}" x:Key="EmotionLabelContainer">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Width" Value="auto" />
        <Setter Property="LastChildFill" Value="True"/>
    </Style>

    <!-- Text Blocks -->
    <Style TargetType="{x:Type TextBlock}" x:Key="EmoteTextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="MainControlHeader" BasedOn="{StaticResource EmoteTextBlock}">
        <Setter Property="FontFamily" Value="{StaticResource DancingScript}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeXXLarge}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="15,0,0,0" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="SubControlHeader" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}" />
        <Setter Property="Background" Value="{StaticResource WhiteBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextDarkBlueBrush}" />
        <Setter Property="Margin" Value="-12,-12,-12,5" />
        <Setter Property="Padding" Value="20,2" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="ControlHeader" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}" />
        <Setter Property="Background" Value="{StaticResource WhiteBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextDarkBlueBrush}" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Margin" Value="-1,-1,-1,0" />
        <Setter Property="Padding" Value="20,2" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="SectionHeader" BasedOn="{StaticResource EmoteTextBlock}">
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="TextDecorations" Value="Underline"/>
        <Setter Property="Margin" Value="10,3,0,1" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="CenteredInfoText" BasedOn="{StaticResource EmoteTextBlock}">
        <Setter Property="FontSize" Value="{StaticResource FontSizeXXLarge}" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="ImageRequestFeedback" BasedOn="{StaticResource CenteredInfoText}">
        <!-- Default appearance -->
        <Setter Property="FontSize" Value="{StaticResource FontSizeXXLarge}" />
        <Setter Property="Padding" Value="15,5"/>
        <Setter Property="Text" Value=""/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <!-- RequestStates.AwaitingResponse -->
            <DataTrigger Binding="{Binding Path=State}" Value="1">
                <Setter Property="Background" Value="{StaticResource DarkGrayMaskBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource TextBlueBrush}"/>
                <Setter Property="Text" Value="Analyzing"/>
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <!-- RequestStates.EmptyResult -->
            <DataTrigger Binding="{Binding Path=State}" Value="2">
                <Setter Property="Background" Value="{StaticResource DarkGrayMaskBrush}"/>
                <Setter Property="Foreground" Value="Red"/>
                <Setter Property="Text" Value="Analysis failed"/>
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <!-- No image in the image container -->
            <DataTrigger Binding="{Binding ElementName=EmotionImage, Path=Source}" Value="{x:Null}">
                <Setter Property="Background" Value="{StaticResource DarkGrayMaskBrush}"/>
                <Setter Property="Text" Value="No image loaded!" />
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="PresentationText" BasedOn="{StaticResource EmoteTextBlock}">
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <!-- Text Boxes -->
    <Style TargetType="{x:Type TextBox}" x:Key="BigTextBox" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource HalfTransparentBrush}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource DarkerWhiteBrush}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Margin" Value="2"/>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="UrlTextBox" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource TextDarkBlueBrush}"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Margin" Value="0,2"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <!-- Buttons -->
    <Style TargetType="{x:Type Button}" x:Key="NavBarHeader" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="FontFamily" Value="{StaticResource DancingScript}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeXLarge}" />
        <Setter Property="Foreground" Value="{StaticResource TextBlueBrush}" />
        <Setter Property="Background" Value="{StaticResource WhiteBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBlueBrush}" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="20,0,0,0" />
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="NavBarButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="Foreground" Value="{StaticResource TextBlueBrush}" />
        <Setter Property="Background" Value="{StaticResource WhiteBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBlueBrush}" />
        <Setter Property="BorderThickness" Value="2,0,0,0" />
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="SquareLightButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}" />
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}"/>
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border>
                        <TextBox VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}"></TextBox>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource EmoteLightBlue}" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="{x:Type Button}" x:Key="FlatWhiteButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBlueBrush}"/>
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="2"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="AnalyzeImageButton" BasedOn="{StaticResource FlatWhiteButton}">
        <Setter Property="Content" Value="Analyze" />
        <Setter Property="Padding" Value="10,2" />
        <Setter Property="IsEnabled" Value="True" />
        <Style.Triggers>
            <!-- No image in the image container -->
            <DataTrigger Binding="{Binding ElementName=EmotionImage, Path=Source}" Value="{x:Null}">
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="Background" Value="{StaticResource DarkGrayMaskBrush}"/>
                <Setter Property="Content" Value="No image loaded!" />
            </DataTrigger>
        </Style.Triggers>
        
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="AnalyzeTextButton" BasedOn="{StaticResource FlatWhiteButton}">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Padding" Value="10,2" />
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Content" Value="Analyze" />
        <Setter Property="IsEnabled" Value="True" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=TextToAnalyseBox, Path=Text}" Value="">
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="Background" Value="{StaticResource DarkGrayMaskBrush}"/>
                <Setter Property="Content" Value="No text to analyze!" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Labels -->
    <Style TargetType="{x:Type Label}" x:Key="DefaultLabel" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="EmphaseLabel" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource TextDarkBlueBrush}"/>
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="CompactLabel" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}"/>
        <Setter Property="Foreground" Value="{StaticResource TextDarkBlueBrush}"/>
        <Setter Property="Padding" Value="5,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="EmotionLabel" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBlueBrush}"/>
        <Setter Property="Padding" Value="10,5,0,5"/>
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="EmotionScore" BasedOn="{StaticResource EmotionLabel}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Padding" Value="0,5,10,5"/>
        <Setter Property="Foreground" Value="{StaticResource TextDarkBlueBrush}" />
    </Style>

    <!-- Combo Boxes -->
    <Style TargetType="{x:Type ComboBox}" x:Key="CoolComboBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="MinWidth" Value="50"/>
    </Style>

    <!-- Stack Panels -->
    <Style TargetType="{x:Type StackPanel}" x:Key="CompactStack">
        <Setter Property="Height" Value="20"/>
    </Style>

    <Style TargetType="{x:Type ContentControl}" x:Key="TextAnalyticsResultStack">
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=State}" Value="3"/>
                    <Condition Binding="{Binding Path=State}" Value="4"/>
                    <Condition Binding="{Binding Path=State}" Value="5"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>